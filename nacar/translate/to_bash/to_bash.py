"""
Nacar
Copyright 2022 Alberto Morón Hernández
[github.com/albertomh/Nacar]

Blueprint to bash translator
▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔
TODO: document
"""

import os
import sys
# Add `translate` module to path so ITranslator import may be performed.
from typing import List, Union
from datetime import datetime
import textwrap

# Add root Nacar package to syspath to make below imports possible.
sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(os.path.realpath(__file__)))))  # noqa
from __version__ import __version__
from translate.itranslator import ITranslator


class BlueprintToBash(ITranslator):
    """
    0. Bash translator utilities
        0.0 __init__
        0.1 get_max_line_length()
        0.2 get_comment_lines(content)

    1. File heading
        1.0 get_hashbang_lines()
        1.1 get_title_lines()
        1.2 get_nacar_info_lines()
        1.3 get_file_heading()

    2. Translate blueprint

    """

#   0. Bash translator utilities ----------------------------------------------

    def __init__(self, blueprint: dict):
        self.blueprint = blueprint

    def get_max_line_length(self):
        return 80

    def get_comment_lines(self, content: Union[str, List[str]]) -> List[str]:
        if len(content) == 0:
            return ["#"]

        comment_lines: List[str] = []
        if type(content) is str:
            width = self.get_max_line_length() - 2
            comment_lines = textwrap.wrap(content, width)
        elif type(content) is list:
            comment_lines = content

        return [f"# {c}" for c in comment_lines]

#   1. File heading -----------------------------------------------------------

    def get_hashbang_lines(self) -> List[str]:
        return ["#!/bin/bash", ""]

    def get_title_lines(self) -> List[str]:
        return self.get_comment_lines(self.blueprint['title'])

    def get_nacar_info_lines(self) -> List[str]:
        today = datetime.now().date().isoformat()
        info = f"Generated by Nacar {__version__} on {today}."
        gh_info = "[github.com/albertomh/Nacar]"

        return self.get_comment_lines([info, gh_info])

    def get_file_heading(self) -> str:
        file_header_lines = []
        file_header_lines += self.get_hashbang_lines()
        file_header_lines += self.get_title_lines()
        file_header_lines += self.get_comment_lines("")
        file_header_lines += self.get_nacar_info_lines()
        file_header_lines += ["\n"]

        return '\n'.join(file_header_lines)

#   2. Translate blueprint ----------------------------------------------------

    def translate_blueprint(self) -> str:
        """
        Given a blueprint (a Python object built by parsing a YAML blueprint),
        return a string containing the blueprint's translation to Bash, ready
        to be persisted to a file and used as a Nacar application.
        """

        bash_translation = self.get_file_heading()

        return bash_translation
